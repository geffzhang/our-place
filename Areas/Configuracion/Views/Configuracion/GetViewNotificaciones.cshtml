@model ADESCOMBUSINESS.Areas.Configuracion.Models.ConfiguracionSistemaNotifCompuesto
@{
    Layout = null;
}

@using (Ajax.BeginForm("SetViewNotificaciones", "Configuracion", new AjaxOptions { OnBegin = "AdicionarLoading()", UpdateTargetId = "Modal" }))
{
    <input id="GrupoEdicion" name="GrupoEdicion" type="hidden" value="@ViewBag.GrupoEdicion" />
    <input id="sumEmailsSelected" name="sumEmailsSelected" type="hidden" />
    <input id="sumAppSelected" name="sumAppSelected" type="hidden" />
    <input id="sumPushSelected" name="sumPushSelected" type="hidden" />
    if (ViewBag.Error != "" && ViewBag.Error != null && ViewBag.Error != "OK")
    {
        <div class="alert alert-danger" role="alert">
            <span class="glyphicon glyphicon-exclamation-sign" aria-hidden="true"></span>
            @ViewBag.Error
        </div>
    }
    else
    {
        if (ViewBag.Error == "OK")
        {
            <div class="alert alert-success" role="alert">
                <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
                Operacion Completada Con exito!
            </div>
            <script>
                OcultarModal();
                MostarModalSuccess();
            </script>
        }
    }
    <div class="panel panel-default">
        <div class="panel-heading">
            <label class="control-label">Notificaciones vía Correo Electrónico</label>
        </div>
        <div class="panel-body">
            <table id="ListaEmails" class="table table-advance table-hover table-bordered">
                <thead style="background-color: #2e2e37; color: white">
                <th>Incluir</th>
                <th>Tipo de Notificación</th>
                <th>Acciones</th>
                </thead>
                <tbody class="row form-panel">
                    @foreach (ADESCOMBUSINESS.Areas.Configuracion.Models.TipoNotifSelect EmailsSelected in Model.EmailNotifications)
                    {
                        <tr onclick="SelectRow(@EmailsSelected.ID, this)">
                            <td>
                                @if (EmailsSelected.Incluir)
                                {
                                    <input type="checkbox" name="chkEmailsSelected" value="@EmailsSelected.Clave" onclick="SumarSelectedEmails()" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkEmailsSelected" onclick="SumarSelectedEmails()" value="@EmailsSelected.Clave" />
                                }
                            </td>
                            <td>@Html.DisplayFor(m => EmailsSelected.Descripcion)</td>
                            <td>
                                @Ajax.ActionLink(" ", "SetNotifLayoutEmail", new { TipoNotificacion_ID = @EmailsSelected.ID }, new AjaxOptions { HttpMethod = "get", OnBegin = "MostarVistaParcial3('Layout Email " + @EmailsSelected.Descripcion + "')", OnFailure = "MostrarErrorModal3", UpdateTargetId = "Modal3" }, new { @class = "btn btn-primary btn-xs glyphicon glyphicon-cog", @title = "Layout Email" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>


    <div class="panel panel-default">
        <div class="panel-heading">
            <label class="control-label">Notificaciones vía Buzón de App</label>
        </div>
        <div class="panel-body">
            <table id="ListaBuzonApp" class="table table-advance table-hover table-bordered">
                <thead style="background-color: #2e2e37; color: white">
                <th>Incluir</th>
                <th>Tipo de Notificación</th>
                <th>Acciones</th>
                </thead>
                <tbody class="row form-panel">
                    @foreach (ADESCOMBUSINESS.Areas.Configuracion.Models.TipoNotifSelect BuzonAppSelected in Model.BuzonAppNotifications)
                    {
                        <tr onclick="SelectRow(@BuzonAppSelected.ID, this)">
                            <td>
                                @if (BuzonAppSelected.Incluir)
                                {
                                    <input type="checkbox" name="chkAppSelected" value="@BuzonAppSelected.Clave" onclick="SumarSelectedApp()" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkAppSelected" onclick="SumarSelectedApp()" value="@BuzonAppSelected.Clave" />
                                }
                            </td>
                            <td>@Html.DisplayFor(m => BuzonAppSelected.Descripcion)</td>
                            <td>
                                @Ajax.ActionLink(" ", "SetNotifLayoutBuzonApp", new { TipoNotificacion_ID = @BuzonAppSelected.ID }, new AjaxOptions { HttpMethod = "get", OnBegin = "MostarVistaParcial3('Layout Buzón App " + @BuzonAppSelected.Descripcion + "')", OnFailure = "MostrarErrorModal3", UpdateTargetId = "Modal3" }, new { @class = "btn btn-primary btn-xs glyphicon glyphicon-cog", @title = "Layout Buzón App" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
    
    <div class="panel panel-default">
        <div class="panel-heading">
            <label class="control-label">Notificaciones vía Push</label>
        </div>
        <div class="panel-body">
            <table id="ListaPushNotif" class="table table-advance table-hover table-bordered">
                <thead style="background-color: #2e2e37; color: white">
                <th>Incluir</th>
                <th>Tipo de Notificación</th>
                <th>Acciones</th>
                </thead>
                <tbody class="row form-panel">
                    @foreach (ADESCOMBUSINESS.Areas.Configuracion.Models.TipoNotifSelect PushSelected in Model.PushNotifications)
                    {
                        <tr onclick="SelectRow(@PushSelected.ID, this)">
                            <td>
                                @if (PushSelected.Incluir)
                                {
                                    <input type="checkbox" name="chkPushSelected" value="@PushSelected.Clave" onclick="SumarSelectedPush()" checked="checked" />
                                }
                                else
                                {
                                    <input type="checkbox" name="chkPushSelected" onclick="SumarSelectedPush()" value="@PushSelected.Clave" />
                                }
                            </td>
                            <td>@Html.DisplayFor(m => PushSelected.Descripcion)</td>
                            <td>
                                @Ajax.ActionLink(" ", "SetNotifLayoutPushNotif", new { TipoNotificacion_ID = @PushSelected.ID }, new AjaxOptions { HttpMethod = "get", OnBegin = "MostarVistaParcial3('Layout Push Notifications " + @PushSelected.Descripcion + "')", OnFailure = "MostrarErrorModal3", UpdateTargetId = "Modal3" }, new { @class = "btn btn-primary btn-xs glyphicon glyphicon-cog", @title = "Layout Push Notifications" })
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>


    @*@Html.Raw("<div class='panel panel-default'>");
    @Html.Raw("<div class='panel-heading'>");
    @Html.Raw("<label class='control-label'>Parámetros de Configuración de Correo Electrónico de Salida</label>");
    @Html.Raw("</div><br />");
    @Html.Raw("<div class='panel - body'>");
    int columna = 1;
    foreach (ADESCOMBUSINESS.Areas.Configuracion.Models.ConfiguracionSistemaParamCompania Parametro in Model.Parametros)
    {
        if ((columna % 2) != 0)
        {
            @Html.Raw("<div class='row'>");
        }
        <div class="col-md-2">
            <label class="control-label" for="@Parametro.TCP_Nombre">@Parametro.TCP_Descripcion</label>
        </div>
            <div class="col-md-4">
                @{switch (@Parametro.TipoDato_ID)
                    {
                        case ADESCOMBUSINESS.Configurations.TipoDatosSistema.Fecha:
                            if (Parametro.CPA_Valor.ToString() != "")
                            {
                                if (Parametro.CPA_UsuarioModif == false)
                                {
                                    <input class="form-control date" id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="@string.Format("{0:yyyy-MM-dd}", Convert.ToDateTime(Parametro.CPA_Valor))" type="text" readonly disabled>
                                }
                                else
                                {
                                    <input class="form-control date" id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="@string.Format("{0:yyyy-MM-dd}", Convert.ToDateTime(Parametro.CPA_Valor))" type="text">
                                }
                            }
                            else
                            {
                                if (Parametro.CPA_UsuarioModif == false)
                                {
                                    <input class="form-control date" id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="" type="text" readonly disabled>
                                }
                                else
                                {
                                    <input class="form-control date" id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="" type="text">
                                }
                            }
                            break;
                        case ADESCOMBUSINESS.Configurations.TipoDatosSistema.Entero:
                            if (Parametro.CPA_UsuarioModif == false)
                            {
                                <input class="form-control" id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="@Parametro.CPA_Valor" type="text" onkeypress="return isNumberKey(event)" readonly>
                            }
                            else
                            {
                                <input class="form-control" id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="@Parametro.CPA_Valor" type="text" onkeypress="return isNumberKey(event)">
                            }
                            break;

                        case ADESCOMBUSINESS.Configurations.TipoDatosSistema.SINO:
                            if (Parametro.CPA_Valor.ToString() == "")
                            {
                                Parametro.CPA_Valor = false;
                            }
                            if (((@Convert.ToBoolean(Parametro.CPA_Valor))))
                            {
                                if (Parametro.CPA_UsuarioModif == false)
                                {
                                    <input id="@Parametro.TCP_Nombre" class="form-control " type="checkbox" value="true" name="@Parametro.TCP_Nombre" checked="checked" disabled="disabled">
                                }
                                else
                                {
                                    <input id="@Parametro.TCP_Nombre" class="form-control " type="checkbox" value="true" name="@Parametro.TCP_Nombre" checked="checked">
                                }
                            }
                            else
                            {
                                if (Parametro.CPA_UsuarioModif == false)
                                {
                                    <input class="form-control " id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="true" type="checkbox" disabled="disabled">
                                }
                                else
                                {
                                    <input class="form-control " id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="true" type="checkbox">
                                }
                            }
                            break;
                        case ADESCOMBUSINESS.Configurations.TipoDatosSistema.Texto:
                            if (Parametro.CPA_UsuarioModif == false)
                            {
                                if (Parametro.CPA_Password == true) {
                                    <input class="form-control " id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="@Parametro.CPA_Valor" type="password" readonly>
                                }
                                else
                                {
                                    <input class="form-control " id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="@Parametro.CPA_Valor" type="text" readonly>
                                }
                            }
                            else
                            {
                                if (Parametro.CPA_Password == true)
                                {
                                    <input class="form-control " id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="@Parametro.CPA_Valor" type="password">
                                }
                                else
                                {
                                    <input class="form-control " id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="@Parametro.CPA_Valor" type="tel">
                                }
                            }
                            break;
                        default:
                            if (Parametro.CPA_UsuarioModif == false)
                            {
                                <input class="form-control " type="password" id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="@Parametro.CPA_Valor" type="text" readonly>
                            }
                            else
                            {
                                <input class="form-control " type="password" id="@Parametro.TCP_Nombre" name="@Parametro.TCP_Nombre" value="@Parametro.CPA_Valor" type="text">
                            }
                            break;
                    }
                }
            </div>

                    if ((columna % 2) == 0 || Model.Parametros.Count == columna)
                    {
                        @Html.Raw("</div><br /> ");
                        }

                        columna++;

                    }

                    @Html.Raw("</div>");
                    @Html.Raw("</div>");*@

                    <div class="modal-footer">
                        <button type="button" class="btn btn-danger glyphicon glyphicon-remove" data-dismiss="modal"></button>
                        <button type="submit" class="btn btn-success glyphicon glyphicon-ok"></button>
                    </div>

                    }

<script>

    $(".date").datepicker({ dateFormat: "yy-mm-dd" }).val();

    function SelectRow(id, element) {
        $(element).addClass('Select').siblings().removeClass('Select');
    }

    function SumarSelectedPush() {
        var checkboxValues = new Array();
        var suma = parseInt(0);
        $('input[name="chkPushSelected"]:checked').each(function () {
            checkboxValues.push($(this).val());
            suma = suma + parseInt($(this).val());
        });

        document.getElementById("sumPushSelected").value = suma;
    }

    function SumarSelectedApp() {
        var checkboxValues = new Array();
        var suma = parseInt(0);
        $('input[name="chkAppSelected"]:checked').each(function () {
            checkboxValues.push($(this).val());
            suma = suma + parseInt($(this).val());
        });

        document.getElementById("sumAppSelected").value = suma;
    }

    function SumarSelectedEmails() {
        var checkboxValues = new Array();
        var suma = parseInt(0);
        $('input[name="chkEmailsSelected"]:checked').each(function () {
            checkboxValues.push($(this).val());
            suma = suma + parseInt($(this).val());
        });

        document.getElementById("sumEmailsSelected").value = suma;
    }

    SumarSelectedEmails();
    SumarSelectedApp();
    SumarSelectedPush();
</script>
<div class="modal fade" id="modal-container-Success3" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-mini">
        <div class="modal-content">
            <div id="modal-header-Success" class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel-Success">Operacion Exitosa</h4>
            </div>
            <div id="Modal-Success" class="modal-body">
                <div class="alert alert-success" role="alert">
                    <span class="glyphicon glyphicon-ok" aria-hidden="true"></span>
                    Operacion Completada Con exito!
                </div>
                <div style="text-align: center">
                    <button class="btn btn-default" type="button" onclick="OcultarModalSuccess3('RefreshButon3')">OK</button>
                </div>
            </div>
        </div>
    </div>
</div>